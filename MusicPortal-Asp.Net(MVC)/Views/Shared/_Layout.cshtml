@inject MusicPortal_Asp.Net_MVC_.BLL.Interfaces.ILangRead MyLangRead
﻿@using MusicPortal_Asp.Net_MVC_.DAL.Entities


<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ASP.NET Core MVC Application</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
   <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
</head>
<body data-theme="dark" class="bg">


    <header class=" ms-auto d-flex justify-content-between align-items-center mb-5">
        <h4><i class="bi bi-music-note-beamed"></i> @Resources.Resource.MusicPortal</h4>
        <div class="language-selector  ms-auto d-flex align-items-center">
            <form asp-action="ChangeCulture" asp-controller="Home"class="d-flex align-items-center">
                <select name="lang" class="form-select me-2">
                    <option disabled selected>@Resources.Resource.ChooseLang</option>
                    @foreach (Language it in MyLangRead.languageList())
                    {
                        <option value=@it.ShortName>@it.Name</option>
                    }
                </select>
                <button type="submit" name="submit" value="@Resources.Resource.ChooseLang" class="btn btn-theme">
                    <i class="bi bi-translate me-2"></i>
                </button>
            </form>
        </div>
     




        <div class="auth-buttons ms-auto">
                @if (Context.Session.GetString("Login") == null && Context.Request.Cookies["login"] == null)
                {
                    <a class="btn btn-outline-theme me-2" asp-area="" asp-controller="Account" asp-action="Login">@Resources.Resource.Login</a>
                    <a class="btn btn-theme" asp-area="" asp-controller="Account" asp-action="Register">@Resources.Resource.Register</a>
                }
                else
                {
                    var firstName = Context.Session.GetString("FirstName") ?? Context.Request.Cookies["login"];
                    <span class="welcome-text me-3">@Resources.Resource.Welcome, @firstName!</span>
                    <a class="btn btn-danger" asp-area="" asp-controller="Home" asp-action="Logout">
                       <i class="fas fa-sign-out-alt me-1"></i>@Resources.Resource.Logout
                    </a>

                }

            </div>
        </header>



    <div class="container my-5">
        <main role="main">
            @* <div><span id="notification" style="color:red;font-size:15px;"></span></div> *@
            <div id="notification" class="alert alert-danger alert-dismissible fade show d-none" role="alert">
                <span id="notification-text"></span>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>

            @RenderBody()
        </main>
    </div>


    <button class="theme-switch btn btn-theme" onclick="toggleTheme()">
        <i class="bi bi-moon"></i>
    </button>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js" integrity="sha256-oP6HI9z1XaZNBrJURtCoUT5SUnxFr8s3BzRl+cbzUq8=" crossorigin="anonymous"></script>


    <script type="text/javascript">
        function toggleTheme() {
            const body = document.body;
            const currentTheme = body.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            body.setAttribute('data-theme', newTheme);
        }

        function toggleSidebar() {
            const sidebar = document.querySelector('.sidebar');
            const mainContent = document.querySelector('.main-content');
            sidebar.classList.toggle('active');
            mainContent.classList.toggle('shifted');
        }

        $(function () {
                /*
                Для взаимодействия с хабом NotificationHub с помощью метода build() объекта HubConnectionBuilder
                создается объект hubConnection - объект подключения.
                Метод withUrl устанавливает адрес, по котору приложение будет обращаться к хабу.
                Поскольку NotificationHub на сервере сопоставляется с адресом "/notification",
                то именно этот адрес и передается в withUrl.
                */
            const hubConnection = new signalR.HubConnectionBuilder()
                .withUrl("/notification")
                .build();

            // Метод hubConnection.on устанавливает функцию на стороне клиента,
            // которая будет получать данные от сервера (хаба)

            //эта функция будет вызываться с серверной стороны
            hubConnection.on("displayMessage", function (message) {
               const notification = $('#notification');
               $('#notification-text').html(message);
               notification.removeClass('d-none').fadeIn();

               setTimeout(() => {
                   notification.fadeOut(() => notification.addClass('d-none'));
                }, 5000);
            });


            // Открываем соединение с сервером.
            // Если подключение к хабу успешно установлено,
            // то сработает метод then, чтобы выполнить некоторые действия.
            // Если же в процессе подключения к серверу возникнет ошибка,
            // то сработает функция, которая передается в метод catch и которая получит данные об ошибке.
            hubConnection.start()
                .then()//успешный потребитель ничего не делает ибо клиент ничего не вызывает на сервере а только получает уведомления(хаб класс пусой поэтому)
                .catch(function (err) {
                    return console.error(err.toString());
                });

            


        });
    </script>
  
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html> 