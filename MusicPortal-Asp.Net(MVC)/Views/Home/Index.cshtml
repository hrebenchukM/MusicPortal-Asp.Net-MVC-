@model MusicPortal_Asp.Net_MVC_.Models.IndexViewModel

@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex">



    <button class="sidebar-toggle" onclick="toggleSidebar()">
        <i class="bi bi-list"></i>
    </button>

    <div class="sidebar">
        <div class="sidebar-header">
            <h4><i class="bi bi-music-note-beamed"></i>  Music Portal</h4>
            <button class="sidebar-close" onclick="toggleSidebar()">
                <i class="bi bi-x-lg"></i>
            </button>
        </div>
        <ul class="sidebar-menu">
            <li>
                @if (Context.Session.GetString("Login") != "Guest")
                {

                    <a href="@Url.Action("CreateSongU", "Home")">
                        <i class="bi bi-music-note-list"></i> Create Song
                    </a>
                }
                <a href="@Url.Action("Index", "Home")" class="active">
                    <i class="bi bi-music-note-list"></i>Songs
                </a>
            </li>
         
        </ul>
    </div>


    

    <div class="main-content container">
        <h2><i class="bi bi-music-note-list me-2"></i>All Songs</h2>
        <div class="d-flex gap-3">

            <form method="get">
                <div class="d-flex flex-column">
                    <div class="input-group mb-3">
                       <span class="input-group-text  border-end-0">
                            <i class="bi bi-search"></i>
                            <label>Artist: </label>
                       </span>
                        <input name="artist" value="@Model.FilterViewModel.SelectedArtist" class="form-control border-start-0" />
                     </div>

                    <div class="mb-3">
                        <label>Genre: </label>
                        <select name="genre" asp-items="Model.FilterViewModel.Genres" class="form-select"></select>
                        <button type="submit" value="Filter" class="btn btn-theme btn-lg">Filter</button>
                    </div>
               
                </div>
            </form>


            <div class="sorting-controls rounded p-3 mb-4">
                <div class="row align-items-center">
                    <div class="col-md-4">
                        <label class="form-label mb-0">Sort by:</label>
                        <div class="d-flex justify-content-start">
                            <a asp-action="Index"
                               asp-route-sortOrder="@(Model.SortViewModel.TitleSort)"
                               asp-route-artist="@(Model.FilterViewModel.SelectedArtist)"
                               asp-route-genre="@(Model.FilterViewModel.SelectedGenre)"
                               class="btn btn-outline-theme btn-sm sort-link me-2">Title</a>

                            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.YearSort)"
                               asp-route-artist="@(Model.FilterViewModel.SelectedArtist)"
                               asp-route-genre="@(Model.FilterViewModel.SelectedGenre)"
                               class="btn btn-outline-theme btn-sm sort-link me-2">Year</a>

                            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.ArtistSort)"
                               asp-route-artist="@(Model.FilterViewModel.SelectedArtist)"
                               asp-route-genre="@(Model.FilterViewModel.SelectedGenre)"
                               class="btn btn-outline-theme btn-sm sort-link me-2">Artist</a>

                            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.GenreSort)"
                               asp-route-artist="@(Model.FilterViewModel.SelectedArtist)"
                               asp-route-genre="@(Model.FilterViewModel.SelectedGenre)"
                               class="btn btn-outline-theme btn-sm sort-link">Genre</a>
                        </div>
                    </div>
                </div>
            </div>



        </div>






        <div class="row g-3">
            @foreach (var item in Model.Songs)
            {
                <div class="col-md-3 col-sm-6">
                    <div class="card song-card h-100">
                        <img class="card-img-top" src="@Html.DisplayFor(modelItem => item.PathP)" alt="Song cover">
                        <div class="card-body d-flex flex-column">
                            <h4 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h4>
                            <div class="song-info mb-3">
                                <i class="bi bi-person-circle"></i>
                                <span>@Html.DisplayFor(modelItem => item.Artist.Name)</span>
                                <i class="bi bi-dot"></i>
                                <span>@Html.DisplayFor(modelItem => item.Genre.Name)</span>
                                <i class="fas fa-calendar me-2"></i>
                                <span>@Html.DisplayFor(modelItem => item.Year)</span>
                            </div>
                            <div class="mt-auto">
                                <a asp-action="DetailsSongU" asp-route-id="@item.Id" class="btn btn-theme w-100">
                                    <i class="bi bi-play-circle-fill me-2"></i> Play now
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
        <ul class="pagination mt-5 justify-content-center">
            @if (Model.PageViewModel.HasPreviousPage)
            {
                <li class="page-item">
                    <a asp-action="Index"
                       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
                       asp-route-artist="@(Model.FilterViewModel.SelectedArtist)"
                       asp-route-genre="@(Model.FilterViewModel.SelectedGenre)"
                       asp-route-sortorder="@(Model.SortViewModel.Current)"
                       class="page-link">
                        <i class="bi bi-chevron-double-left me-1"></i>
                        Previous
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">
                        <i class="bi bi-chevron-double-left me-1"></i>
                        Previous
                    </span>
                </li>
            }

            @for (int i = 1; i <= Model.PageViewModel.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageViewModel.PageNumber ? "active" : "")">
                    <a asp-action="Index"
                       asp-route-page="@i"
                       asp-route-artist="@(Model.FilterViewModel.SelectedArtist)"
                       asp-route-genre="@(Model.FilterViewModel.SelectedGenre)"
                       asp-route-sortorder="@(Model.SortViewModel.Current)"
                       class="page-link">
                        @i
                    </a>
                </li>
            }

            @if (Model.PageViewModel.HasNextPage)
            {
                <li class="page-item">
                    <a asp-action="Index"
                       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
                       asp-route-artist="@(Model.FilterViewModel.SelectedArtist)"
                       asp-route-genre="@(Model.FilterViewModel.SelectedGenre)"
                       asp-route-sortorder="@(Model.SortViewModel.Current)"
                       class="page-link">
                        Next <i class="bi bi-chevron-double-right ms-1"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">
                        Next <i class="bi bi-chevron-double-right ms-1"></i>
                    </span>
                </li>
            }
        </ul>


    </div>
</div>




